using System;
using System.Collections.Generic;
using System.Linq;

namespace Arrays
{
    class Program
    {
        static void Main(string[] args)
        {
            // ex.1  Day of week
            //string[] days = { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" };

            //int day = int.Parse(Console.ReadLine());

            //if (day >= 1 && day <= 8)
            //{
            //    Console.WriteLine(days[day - 1]);
            //}
            //else
            //{
            //    Console.WriteLine("Invalid day!");
            //}


            // ex.3  sample input -> 1 2 3 4 5 
            //            string input = Console.ReadLine();

            //            string[] arr = input.Split();
            //            int[] integer = new int[arr.Length];

            //            for (int i = 0; i < arr.Length; i++)
            //            {
            //                integer[i] = int.Parse(arr[i]);
            //                Console.WriteLine(integer[i]);
            //            }



            //ex. Sum Adjacent Equal Numbers  
            //sample input -> 3 3 6 1 or 8 2 2 4 8 16 
            //result -> 3 3 6 1 -> 6 6 1 -> 12 1
            //List<double> input = Console.ReadLine().Split().Select(double.Parse).ToList();

            //for (int index = 0; index < input.Count - 1; index++)
            //{
            //    if (input[index] == input[index + 1])
            //    {
            //        input[index] += input[index + 1];
            //        input.RemoveAt(index + 1);

            //        index = -1;

            //    }
            //}
            //        Console.WriteLine(string.Join(" ", input));

            //ex.Gauss' Trick
            //List<int> numbers = Console.ReadLine().Split().Select(int.Parse).ToList();

            //var numCount = numbers.Count();
            //for (int index = 0; index < numCount / 2; index++)
            //{
            //    numbers[index] += numbers[numbers.Count - 1];

            //    numbers.RemoveAt(numbers.Count - 1);


            //}
            //Console.WriteLine(string.Join(" ", numbers));  


            //ex.  Change without other variable
            //int x = 10;
            //int y = 5;

            //x = x + y;
            //y = x - y;
            //x = x - y;
            //Console.WriteLine("After swapping: x = "
            //                  + x + ", y = " + y);


            //           // ex
            //            int n = int.Parse(Console.ReadLine());

            //            int[] arr = new int[n];
            //            for (int i = 0; i < n; i++)
            //            {
            //                arr[i] = int.Parse(Console.ReadLine());
            //            }

            // ex
            //string input = Console.ReadLine();
            //string[] numbers = input.Split();
            //int[] arr = new int[numbers.Length];

            //for (int i = 0; i < numbers.Length; i++)
            //{
            //    arr[i] = int.Parse(numbers[i]);
            //}
            //Console.WriteLine(string.Join(" ", arr));


            // REVERSE numbers
            //int n = int.Parse(Console.ReadLine());
            //int[] arr = new int[n];

            //for (int i = 0; i < n; i++)
            //{
            //    arr[i] = int.Parse(Console.ReadLine());
            //}

            //for (int i = n - 1; i >= 0; i--)
            //{

            //    Console.Write(arr[i] + " ");

            //}



            // ex Real numbers
            //    double[] numbers = Console.ReadLine().Split(" ").Select(double.Parse).ToArray();

            //    for (int i = 0; i < numbers.Length; i++)
            //    {
            //        Console.WriteLine($"{Math.Round(numbers[i])} => {i + 1}");
            //        Console.WriteLine(string.Join(" ", numbers[i]));
            //    }

            // Reverse array of strings

            //var nums = Console.ReadLine().Split(' ').ToArray();

            //for (int i = 0; i < nums.Length / 2; i++)
            //{
            //    SwapElements(nums, i, nums.Length - 1 - i);
            //}
            //Console.WriteLine(string.Join(" ", nums));

            //static void SwapElements(string[] arr, int i, int j)
            //{

            //    var oldElement = arr[i];

            //    arr[i] = arr[j];

            //    arr[j] = oldElement;

            // }

            // ex Matrix
            //int[,] matrix =

            //{ { 5, 2, 3, 1 },

            //{ 1, 9, 2, 4 },

            //{ 9, 8, 6, 11 } };

            //for (int row = 0; row < matrix.GetLength(0); row++)

            //{

            //    for (int col = 0; col < matrix.GetLength(1); col++)

            //    {

            //        Console.Write("{0} ", matrix[row, col]);

            //    }

            //    Console.WriteLine();

            //}


            // ex7 Sum only even numbers
            //int[] numbers = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();

            //var evenSum = 0;

            //for (int i = 0; i < numbers.Length; i++)
            //{
            //    int currentNum = numbers[i];
            //    if (currentNum % 2 == 0)
            //    {
            //        evenSum += currentNum;
            //    }
            //}
            //Console.WriteLine(evenSum);



            //          //  ex  Even and odd numbers
            int[] numbers = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();

            int evenNum = 0;
            int oddNum = 0;
            int currentNum = 0;

            for (int i = 0; i < numbers.Length; i++)
            {
                currentNum = numbers[i];
                if (currentNum % 2 != 0)
                {
                    oddNum += currentNum;
                }
                if (currentNum % 2 == 0)
                {
                    evenNum += currentNum;
                }
            }
            var result = 0;


            if (evenNum < oddNum)
            {
                result = oddNum - evenNum;
                if (evenNum == 0)
                {
                    result = evenNum - oddNum;
                    Console.WriteLine(result);
                }
                if (evenNum < oddNum)
                {
                    result = evenNum - oddNum;
                    Console.WriteLine(result);

                }
            }
            if (evenNum > oddNum)
            {
                result = evenNum - oddNum;
                Console.WriteLine(result);
            }
        }
    }
}
